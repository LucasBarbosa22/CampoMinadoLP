<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>